//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//     Creater: dylan
//     Date:    2016/3/8 11:19
//     Version: 2.0.0.0
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using DMS.Commonfx.Model.Param;
using DMSFrame;
using System;
using System.Collections.Generic;
using System.Linq;
using WDNET.Contracts;
using WDNET.Entity.DBEntity;
using WDNET.Enum;

namespace WDNET.BizLogic
{
    /// <summary>
    ///  处理层
    /// </summary>
    public class Adm_DeptBLL : BaseBLL<Adm_Dept>
    {
        #region 增删改查
        /// <summary>
        /// 添加实体
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public override bool Insert(Adm_Dept entity)
        {
            return base.Insert(entity);
        }

        /// <summary>
        /// 更新实体
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public bool Update(Adm_Dept entity)
        {
            return base.Update(entity, q => q.DeptID == entity.DeptID);
        }

        /// <summary>
        /// 删除对象
        /// </summary>
        /// <param name="deptID"></param>
        /// <param name="userID"></param>
        /// <returns></returns>
        public bool Del(DelParam param)
        {
            Adm_Dept entity = new Adm_Dept();
            return base.Del(item =>
            {
                item.DeleteFlag = param.DeleteFlag;
                item.DeleteTime = DateTime.Now;
                return item;
            }, q => q.DeptID == param.ID);

        }

        /// <summary>
        /// 获取实体
        /// </summary>
        /// <param name="deptID"></param>
        /// <returns></returns>
        public Adm_Dept GetEntity(int? deptID)
        {
            return base.GetEntity(q => q.DeptID == deptID && q.DeleteFlag == false);
        }

        /// <summary>
        /// 分页查询
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public ConditionResult<Adm_Dept> GetPageList(PageParam entity)
        {
            return base.GetPageList(entity, q => q.OrderBy(q.CreateTime.Desc()), item =>
            {
                item.And(q => q.DeleteFlag == false);
            });
        }

        #endregion

        #region 其他方法
        public List<Adm_Dept> GetList()
        {
            List<Adm_Dept> list = DMST.Create<Adm_Dept>()
                .Where(q => q.StatusFlag == (int)EnumStatusFlag.Passed && q.DeleteFlag == false)
                .OrderBy(q => q.OrderBy(q.DeptParentID))
                .Select(q => q.Columns(q.DeptID, q.DeptName, q.StatusFlag, q.DeptParentID))
                .ToList();
            List<Adm_Dept> resultList = new List<Adm_Dept>();
            PushList(0, list, 0, ref resultList);
            return resultList;
        }
        public string formatLevel(int level)
        {
            if (level == 0)
                return string.Empty;
            string result = string.Empty;
            for (int i = 0; i < level; i++)
            {
                result += "--";
            }
            return result;
        }
        public void PushList(int? DeptID, List<Adm_Dept> list, int level, ref List<Adm_Dept> resultList)
        {
            List<Adm_Dept> parentList = list.Where(q => q.DeptParentID == DeptID).ToList();
            foreach (Adm_Dept item in parentList)
            {
                item.DeptName = formatLevel(level) + item.DeptName;
                resultList.Add(item);
                PushList(item.DeptID, list, level + 1, ref resultList);
            }
        }

        public bool ExistsDept(string DeptName)
        {
            return DMST.Create<Adm_Dept>().Where(q => q.DeptName == DeptName && q.DeleteFlag == false).ToList().Count > 0;
        }
        #endregion
    }
}

