<%@ CodeTemplate Language="C#" TargetLanguage="C#" ResponseEncoding="UTF-8" Description="Generates a very simple business object." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the object is based on." %>
<%@ Property Name="Namespace" Type="System.String" Category="Context"   Default="CSTJR.BizLogic" Description="Namespace that class belongs to." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="System.Net" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Net" %>
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//     Creater: dylan
//     Date:    <%= DateTime.Now.ToShortDateString() + " " + DateTime.Now.ToShortTimeString() %>
//     Version: 2.0.0.0
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Linq.Expressions;
using System.Collections.Generic;
using CSTJR.Param;
using CSTJR.Entity.DBEntity;
using DMSFrame;
using CSTJR.Entity;

namespace <%= Namespace.Trim()==""?"CSTJR.BizLogic":Namespace %>
{	
	/// <summary>
    /// <%=SourceTable.ExtendedProperties["CS_Description"].Value.ToString().Replace("\r\n", ";").Replace("\n", ";")%> 处理层
	/// </summary>
	public class <%= GetClassName(SourceTable) %>BLL : BaseBLL<<%= GetClassName(SourceTable) %>>
	{
		<% bool bDeleteFlag=false,bDeleteTime=false,bDeleteUser=false,bCreateTime=false;%>
		<% for (int i = 0; i < SourceTable.Columns.Count; i++) { %>
		<%		string propertyName = GetPropertyName(SourceTable.Columns[i]); %>
		<%		if(propertyName == "CreateTime"){ bCreateTime = true;}%>
		<%		if(propertyName == "DeleteFlag"){ bDeleteFlag = true;}%>
		<%		if(propertyName == "DeleteTime"){ bDeleteTime = true;}%>
		<%		if(propertyName == "DeleteUser"){ bDeleteUser = true;}%>
		<%}%>
        #region 增删改查
        /// <summary>
        /// 添加实体
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
		public override bool Insert(<%= GetClassName(SourceTable) %> entity)
        {
            return base.Insert(entity);
        }

        /// <summary>
        /// 更新实体
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public bool Update(<%= GetClassName(SourceTable) %> entity)
        {
            <% string PrimaryKeys = "";%>
            <% for (int i = 0; i < SourceTable.PrimaryKey.MemberColumns.Count; i++) { %>
            <% ColumnSchema column = SourceTable.PrimaryKey.MemberColumns[i]; %>
            <% PrimaryKeys += "&& q." + GetPropertyName(column) + " == entity." + GetPropertyName(column); %>
            <%}%>
            <% if(!string.IsNullOrEmpty(PrimaryKeys)){ %>
			  return base.Update(entity, q => <%=PrimaryKeys.Substring(2)%>);
            <%}else{%>            
              return false;
            <%}%>
        }

        /// <summary>
        /// 删除对象
        /// </summary>
        <% string primaryKeys = ""; string primaryArgs = "";%>
        <% for (int i = 0; i < SourceTable.PrimaryKey.MemberColumns.Count; i++) { %>
        <% ColumnSchema column = SourceTable.PrimaryKey.MemberColumns[i]; %>
        <% string columnName = ToColumnName(GetPropertyName(column));%>
        <% primaryKeys += "&& q." + GetPropertyName(column) + " == " + (GetCSharpVariableType(column) == "int"?"param.ID":"param.GuidIn"); %>
        <% primaryArgs +=  GetCSharpVariableType(column) == "string" ? GetCSharpVariableType(column) : GetCSharpVariableType(column) +"? "+ columnName + ","; %>
        /// <param name="<% =columnName %>"></param>
        <%}%>        
        /// <param name="userID"></param>
        /// <returns></returns>
        public bool Del(DelParam param)
        {            
			<%= GetClassName(SourceTable) %> entity = new <%= GetClassName(SourceTable) %>();
            return base.Del(item =>
            {<%if(bDeleteFlag == true){%>
				item.DeleteFlag = param.DeleteFlag;<%}%><%if(bDeleteTime == true){%>
				item.DeleteTime = DateTime.Now;<%}%><%if(bDeleteUser == true){%>
				item.DeleteUser = param.UserID;<%}%>
                return item;
            }, q => <%=primaryKeys.Substring(2)%>);

        }

        /// <summary>
        /// 获取实体
        /// </summary>
         <% primaryKeys = ""; primaryArgs = "";%>
        <% for (int i = 0; i < SourceTable.PrimaryKey.MemberColumns.Count; i++) { %>
        <% ColumnSchema column = SourceTable.PrimaryKey.MemberColumns[i]; %>
        <% string columnName = ToColumnName(GetPropertyName(column));%>
        <% primaryKeys += "&& q." + GetPropertyName(column) + " == " + columnName; %>
        <% primaryArgs +=  GetCSharpVariableType(column) == "string" ? GetCSharpVariableType(column) : GetCSharpVariableType(column) +"? "+ columnName + ","; %>
        /// <param name="<% =columnName %>"></param>
        <%}%>
        /// <returns></returns>
        public <%= GetClassName(SourceTable) %> GetEntity(<%=primaryArgs.Substring(0,primaryArgs.Length - 1) %>)
        {	
			return base.GetEntity(q => <%=primaryKeys.Substring(2)%><%if(bDeleteFlag == true){%> && q.DeleteFlag == false<%}%>);
        }

        /// <summary>
        /// 分页查询
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public ConditionResult<<%= GetClassName(SourceTable) %>> GetPageList(PageParam entity)
        {
			<%ColumnSchema primaryColumnSchema = SourceTable.PrimaryKey.MemberColumns[0];%>
			<%string columnOrderKey = GetPropertyName(primaryColumnSchema);%>
			return base.GetPageList(entity, q => q.OrderBy(q.<%if(bCreateTime == true){%>CreateTime.Desc()<%}else{%><%=columnOrderKey%>.Desc()<%}%>), item =>
            {
				<%if(bDeleteFlag == true){%>item.And(q => q.DeleteFlag == false);<%}%>
            });
        }

        #endregion

		#region 其他方法

		#endregion
	}
}

<script runat="template">

<!-- #include file="CSTJRGen.inc" -->

private string GetColLengthString(ColumnSchema column)
{
	string strRet = "";
	if (column.DataType == DbType.AnsiString || column.DataType == DbType.AnsiStringFixedLength ||
	    column.DataType == DbType.String || column.DataType == DbType.StringFixedLength ||
	    column.DataType == DbType.Binary)
	{
		strRet += ", Length=" + column.Size.ToString();
	}
	return strRet;
}
private string ToColumnName(string columnName){
    if(columnName.Length > 0){
        return columnName[0].ToString().ToLower() + columnName.Substring(1);
    }
    return columnName;
}
</script>