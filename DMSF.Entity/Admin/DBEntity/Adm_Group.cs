//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//     Creater: dylan
//     Date:    2016/3/7 18:43
//     Version: 2.0.0.0
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using DMSFrame;
namespace DMSF.Entity.DBEntity
{
    /// <summary>
    /// 
    /// </summary>
    [Serializable]
    [TableMapping(Name = "Adm_Group", PrimaryKey = "GroupID")]
    public class Adm_Group : BaseEntity
    {

        #region Private Properties

        private int? _groupID;//
        private string _groupName;//
        private int? _statusFlag;//
        private int? _groupParentID;//
        private DateTime? _createTime;//
        private int? _createUser;//
        private bool? _deleteFlag;//
        private DateTime? _deleteTime;//
        private int? _updateUser;//
        private DateTime? _updateTime;//
        private string _remark;//

        #endregion

        #region Public Properties

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "GroupID", AutoIncrement = true)]
        public int? GroupID
        {
            get { return _groupID; }
            set { this.OnBasePropertyChanged<int?>("GroupID", value, ref _groupID); }
        }

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "GroupName")]
        public string GroupName
        {
            get { return _groupName; }
            set { this.OnBasePropertyChanged("GroupName", 50, value, ref _groupName); }
        }

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "StatusFlag")]
        public int? StatusFlag
        {
            get { return _statusFlag; }
            set { this.OnBasePropertyChanged<int?>("StatusFlag", value, ref _statusFlag); }
        }

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "GroupParentID")]
        public int? GroupParentID
        {
            get { return _groupParentID; }
            set { this.OnBasePropertyChanged<int?>("GroupParentID", value, ref _groupParentID); }
        }

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "CreateTime")]
        public DateTime? CreateTime
        {
            get { return _createTime; }
            set { this.OnBasePropertyChanged<DateTime?>("CreateTime", value, ref _createTime); }
        }

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "CreateUser")]
        public int? CreateUser
        {
            get { return _createUser; }
            set { this.OnBasePropertyChanged<int?>("CreateUser", value, ref _createUser); }
        }

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "DeleteFlag"), Newtonsoft.Json.JsonIgnore]
        public bool? DeleteFlag
        {
            get { return _deleteFlag; }
            set { this.OnBasePropertyChanged<bool?>("DeleteFlag", value, ref _deleteFlag); }
        }

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "DeleteTime"), Newtonsoft.Json.JsonIgnore]
        public DateTime? DeleteTime
        {
            get { return _deleteTime; }
            set { this.OnBasePropertyChanged<DateTime?>("DeleteTime", value, ref _deleteTime); }
        }

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "UpdateUser")]
        public int? UpdateUser
        {
            get { return _updateUser; }
            set { this.OnBasePropertyChanged<int?>("UpdateUser", value, ref _updateUser); }
        }

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "UpdateTime")]
        public DateTime? UpdateTime
        {
            get { return _updateTime; }
            set { this.OnBasePropertyChanged<DateTime?>("UpdateTime", value, ref _updateTime); }
        }

        /// <summary>
        /// .
        /// </summary>
        [ColumnMapping(Name = "Remark")]
        public string Remark
        {
            get { return _remark; }
            set { this.OnBasePropertyChanged("Remark", 1000, value, ref _remark); }
        }

        #endregion

    }
}


