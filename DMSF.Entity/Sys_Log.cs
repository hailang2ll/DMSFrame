//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//     Creater: dylan
//     Date:    2021/7/26 11:36
//     Version: 2.0.0.0
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using DMSFrame;
namespace DMSF.Entity
{
	/// <summary>
	/// 
	/// </summary>
	[Serializable]
	[TableMapping(Name = "Sys_Log", PrimaryKey = "LogID")]
	public class Sys_Log : BaseEntity
	{

		#region Private Properties

		private string _memberName;//
		private int? _logID;//
		private int? _subSysID;//
		private string _subSysName;//
		private string _iP;//
		private string _url;//
		private string _thread;//
		private string _level;//
		private string _logger;//
		private string _message;//
		private int? _logType;//
		private string _exception;//
		private bool? _deleteFlag;//
		private DateTime? _createTime;//

		#endregion

		#region Public Properties

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "MemberName")]
		public string MemberName
		{
			get { return _memberName; }
			set { this.OnBasePropertyChanged("MemberName", 64, value, ref _memberName); }
		}
		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "LogID", AutoIncrement = true)]
		public int? LogID
		{
			get { return _logID; }
			set { this.OnBasePropertyChanged<int?>("LogID", value, ref _logID); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "SubSysID")]
		public int? SubSysID
		{
			get { return _subSysID; }
			set { this.OnBasePropertyChanged<int?>("SubSysID", value, ref _subSysID); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "SubSysName")]
		public string SubSysName
		{
			get { return _subSysName; }
			set { this.OnBasePropertyChanged("SubSysName", 256, value, ref _subSysName); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "IP")]
		public string IP
		{
			get { return _iP; }
			set { this.OnBasePropertyChanged("IP", 32, value, ref _iP); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "Url")]
		public string Url
		{
			get { return _url; }
			set { this.OnBasePropertyChanged("Url", 256, value, ref _url); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "Thread")]
		public string Thread
		{
			get { return _thread; }
			set { this.OnBasePropertyChanged("Thread", 128, value, ref _thread); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "Level")]
		public string Level
		{
			get { return _level; }
			set { this.OnBasePropertyChanged("Level", 128, value, ref _level); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "Logger")]
		public string Logger
		{
			get { return _logger; }
			set { this.OnBasePropertyChanged("Logger", 512, value, ref _logger); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "Message")]
		public string Message
		{
			get { return _message; }
			set { this.OnBasePropertyChanged("Message", 2048, value, ref _message); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "LogType")]
		public int? LogType
		{
			get { return _logType; }
			set { this.OnBasePropertyChanged<int?>("LogType", value, ref _logType); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "Exception")]
		public string Exception
		{
			get { return _exception; }
			set { this.OnBasePropertyChanged("Exception", 2048, value, ref _exception); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "DeleteFlag"), Newtonsoft.Json.JsonIgnore]
		public bool? DeleteFlag
		{
			get { return _deleteFlag; }
			set { this.OnBasePropertyChanged<bool?>("DeleteFlag", value, ref _deleteFlag); }
		}

		/// <summary>
		/// .
		/// </summary>
		[ColumnMapping(Name = "CreateTime")]
		public DateTime? CreateTime
		{
			get { return _createTime; }
			set { this.OnBasePropertyChanged<DateTime?>("CreateTime", value, ref _createTime); }
		}

		#endregion

	}
}


